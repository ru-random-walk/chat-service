# Default values for bureaucracy-service.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

replicaCount: 1

image:
  pullPolicy: Always

imagePullSecrets: [ ]
nameOverride: ""
fullnameOverride: ""

env:
  - name: ACTIVEMQ_ARTEMIS_HOST
    value: "activemq-artemis.activemq-artemis.svc.cluster.local"
  - name: AUTH_SERVICE_URL
    value: "http://auth-service.auth-service.svc.cluster.local:8080"
  - name: GENERAL_LOGGING_LEVEL
    value: "INFO"
  - name: POSTGRES_URL
    value: "jdbc:postgresql://postgres.postgresql.svc.cluster.local:5432/random_walk_postgres"
  - name: FLYWAY_MIGRATION_LOCATIONS
    value: "classpath:db/migration"
  - name: LOGGING_SHOW_JPA_QUERIES
    value: "false"
  - name: LOGGING_SHOW_BINDING_JPA_VALUES_LEVEL
    value: "INFO"
  - name: KAFKA_URL
    value: "kafka-cluster.kafka.svc.cluster.local:9092"
  - name: MATCHER_URL
    value: "matcher-service.matcher-service.svc.cluster.local:8080"

secrets:
  - name: ACTIVEMQ_ARTEMIS_LOGIN
    secret_key: ARTEMIS_USER
    secret_name: activemq-artemis-secret

  - name: ACTIVEMQ_ARTEMIS_PASSWORD
    secret_key: ARTEMIS_PASSWORD
    secret_name: activemq-artemis-secret

  - name: POSTGRES_USERNAME
    secret_key: POSTGRES_USER
    secret_name: postgresql-secret

  - name: POSTGRES_PASSWORD
    secret_key: POSTGRES_PASSWORD
    secret_name: postgresql-secret

  - name: INTER_CHAT_LOGIN
    secret_key: LOGIN
    secret_name: inter-chat-secret

  - name: INTER_CHAT_PASSWORD
    secret_key: PASSWORD
    secret_name: inter-chat-secret

serviceAccount:
  # Specifies whether a service account should be created
  create: true
  # Automatically mount a ServiceAccount's API credentials?
  automount: true
  # Annotations to add to the service account
  annotations: { }
  # The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name: ""

podAnnotations: { }
podLabels: { }

podSecurityContext: { }
# fsGroup: 2000

securityContext: { }
# capabilities:
#   drop:
#   - ALL
# readOnlyRootFilesystem: true
# runAsNonRoot: true
# runAsUser: 1000

service:
  type: ClusterIP
  port: 8080

ingress:
  enabled: false

resources:
  limits:
    cpu: 750m
    memory: 512Mi
  requests:
    cpu: 20m
    memory: 256Mi

livenessProbe:
  httpGet:
    path: /actuator/health
    port: 8080
  initialDelaySeconds: 45
  periodSeconds: 20
  failureThreshold: 5
  successThreshold: 1
  timeoutSeconds: 5
readinessProbe:
  httpGet:
    path: /actuator/health
    port: 8080
  initialDelaySeconds: 30
  periodSeconds: 20
  failureThreshold: 5
  successThreshold: 1
  timeoutSeconds: 5

autoscaling:
  enabled: false
  minReplicas: 1
  maxReplicas: 100
  targetCPUUtilizationPercentage: 80
  # targetMemoryUtilizationPercentage: 80

# Additional volumes on the output Deployment definition.
volumes: [ ]
# - name: foo
#   secret:
#     secretName: mysecret
#     optional: false

# Additional volumeMounts on the output Deployment definition.
volumeMounts: [ ]
# - name: foo
#   mountPath: "/etc/foo"
#   readOnly: true

nodeSelector: { }

tolerations: [ ]

affinity: { }